% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_vfld_interpolate.R
\name{read_vfld_interpolate}
\alias{read_vfld_interpolate}
\title{Read data from a vfld file}
\usage{
read_vfld_interpolate(file_name, parameter = NULL, lead_time = NA_real_,
  members = NA_character_, stations = NULL)
}
\arguments{
\item{file_name}{Name of the vfld file}

\item{parameter}{If a parameter is named only this parameter will be
extracted, otherwise all parameters from the vfld will be returned.}

\item{lead_time}{Value to fill the lead_time column with in the output
tibble.}

\item{members}{Value to fill the member column with in the output tibble.}

\item{stations}{A data frame of stations to filter to. Must contain a column
named SID.}
}
\value{
A named list containing: \cr \code{synop}: the surface data, \cr
  \code{temp}: the upper air data.
}
\description{
\code{read_vfld_interpolate} returns the content of a named vfld file as a
named list of data frames - synop for the the surface data (not necessarily
from synop stations, but just the content of the file), and temp for the
upper air data. Although the data in vfld files are already interpolated to
points, the function is called \code{read_vfld_interpolate} for consistency
with other harpIO functions that interpolate to points from gridded fields.
}
\examples{
my_dir <- "/lustre/storeB/users/andrewts/HarpResults/vfld"
vfld_file <- harp_get_filenames(
  my_dir,
  start_date = 2017052600,
  end_date = 2017052600,
  eps_model = "MEPS_summer2017_sfcPertRef",
  sub_model = "MEPS_summer2017_sfcPertRef",
  lead_time = 20,
  member = 0,
  file_template = "vfld")$file_name
vfld_data <- read_vfld_interpolate(vfld_file)

}

